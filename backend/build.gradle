import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id "org.springframework.boot" version "${springBootVersion}"
	id 'java'
	id 'jacoco'
	id 'org.checkerframework' version '0.5.12'
}

group = 'io.spring.cloud.samples.animalrescue'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

checkerFramework {
	excludeTests = true
	checkers = [
			'org.checkerframework.checker.nullness.NullnessChecker',
	]
}

repositories {
	mavenCentral()
}

dependencies {
	implementation enforcedPlatform(SpringBootPlugin.BOM_COORDINATES)
	developmentOnly enforcedPlatform(SpringBootPlugin.BOM_COORDINATES)

	developmentOnly "org.springframework.boot:spring-boot-devtools"

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'org.postgresql:postgresql:42.2.18'
//	testImplementation "org.testcontainers:postgresql:1.15.0"

	testImplementation('org.springframework.security:spring-security-test')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
	testLogging {
		exceptionFormat = "full"
		events = ["passed", "skipped", "failed"]
	}
}

jacocoTestReport {
	dependsOn test
    reports {
        xml.enabled true
		xml.destination new File("${buildDir}/reports/jacoco/report.xml")
		html.enabled false
		csv.enabled false
    }
}
